#include <SDL.h>
//#include <memory>

using namespace std;

struct SSDL_Color : public SDL_Color
{
public:
  constexpr SSDL_Color (SDL_Color& other) : SDL_Color(other) {}
  constexpr SSDL_Color (int rIn = 0, int gIn = 0, int bIn = 0, int alpha = 255) : SDL_Color()
  {
    r = rIn; g = gIn; b = bIn; a = alpha;
  }
  constexpr SSDL_Color            (const SSDL_Color& other) = default;
  constexpr SSDL_Color& operator= (const SSDL_Color& other) = default;
	
  constexpr bool operator== (const SSDL_Color& other) const
  {
    return r == other.r && g == other.g&& b == other.b && a == other.a;
  }
};

inline constexpr SSDL_Color SSDL_CreateColor (int r, int g, int b, int a=255) { return SSDL_Color (r, g, b, a); }

const SSDL_Color BLACK(0, 0, 0), WHITE(255, 255, 255), GREEN (0, 255, 0);


SDL_Window*   sdlWindow_;
SDL_Renderer* sdlRenderer_;
SSDL_Color    background_;
bool          isTimeToQuit_;

//void RenderText        (int x, int y);


inline void SSDL_SetRenderDrawColor (const SSDL_Color& c)
{
  SDL_SetRenderDrawColor(sdlRenderer_, c.r, c.g, c.b, c.a);   
}

inline void SSDL_RenderClearAux ()
{
  if (SDL_RenderClear (sdlRenderer_) < 0) throw "Oh, no!";
}

inline void SSDL_RenderPresent () { SDL_RenderPresent (sdlRenderer_); }

void SSDL_CheckForQuitMessages(const SDL_Event& sdlEvent)
{
  if (sdlEvent.type == SDL_QUIT) isTimeToQuit_ = true;
  if (sdlEvent.type == SDL_KEYDOWN
      && sdlEvent.key.keysym.scancode == SDL_SCANCODE_ESCAPE)
    isTimeToQuit_ = true;
}

void init ()
{
  isTimeToQuit_ = false;
  if (SDL_Init(SDL_INIT_EVERYTHING) < 0)
    throw "Oh, no!";

  sdlWindow_ = SDL_CreateWindow("",             
				SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
				640, 480, 
				0);        
  if (!sdlWindow_) throw "Oh, no!";

  sdlRenderer_ = SDL_CreateRenderer(sdlWindow_, -1, 0);
  if (!sdlRenderer_) throw "Oh, no!";

  SDL_SetRenderDrawColor(sdlRenderer_, 0, 255, 0, 255); SDL_RenderClear(sdlRenderer_); //paint it green

  SDL_SetRenderDrawColor(sdlRenderer_, 255, 255, 255, 255);
}

int  getMoreChars ()
{
  bool OKWereDone = false;
  int x = 0, y = 0;
  
  while (! OKWereDone) 
  {
    SDL_Event event;
    SSDL_RenderPresent();

    while (SDL_PollEvent(&event) != 0)
    {
      SSDL_CheckForQuitMessages(event);
      if (isTimeToQuit_)
      {
	OKWereDone = true;  break;
      }

      switch (event.type)
      {
	case SDL_TEXTINPUT:
	  SDL_Rect rect = {x, y, 8, 8};
	  if (SDL_RenderFillRect (sdlRenderer_, &rect) < 0) throw "Oh, no!";
	  x+= 10;
      }
      }
    }

  return 0;
}


int main (int argc, char** argv)
{
  init ();
  
  //SSDL_SetRenderDrawColor(GREEN);
  //SSDL_RenderClearAux();
  //SSDL_SetRenderDrawColor(WHITE);

  getMoreChars ();
  
  return 0;
}
